	TITLE	LIGHT - THE 10'S ANSWER TO 360 LIGHT
	SUBTTL	VERSION #5.4, NOVEMBER 21, 1971

;THIS IS ONE OF THOSE WORTHLESS PROGRAMS THAT DOESN'T
;DO MUCH EXCEPT PLAY AROUND WITH THE LIGHS ON THE CONSOLE.

;THE PROGRAM IS COMPOSED OF THE VARIOUS SUBROUTINES THAT PRODUCE
;THE EFFECTS, AND TWO CONTROLLING ROUTINES-ONE IS CONT, WHICH READS
;THE RIGHT HALF OF THE CONSOLE DATA SWITCHES TO DECIDE WHAT  SUBROUTINE
;TO GO TO. THE OTHER IS WAIT, WHICH READS THE LEFT HALF AND CALCULATES
;HOW LONG TO WAIT FROMTHAT VAULE. IF THE LEFT HALT IS ZERO, IT GIVE A
;DEFAULT VALUE OF 0. IF YOUR CONFIGURATION DOESN'T INCLUDE THE
;KT10A FAST REGISTERS, YOU'LL WANT TO CHANGE THE 'MOVEI 10,10' INSTRUCTION
;IN WAIT TO 'MOVEI 10,4' TO MAKE UP FOR THE LOSS IN SPEED.

;THE MAJOR AIM OF THIS PROGRAM IS TO GENERATE INTERESTING
;ROUTINES IN MINIMUM CORE. EFFICIENCY IS NOT A FACTOR, SINCE
;IT SPENDS MOST OF IT'S TIME WAITING.

	IFNDEF	EXEC,<EXEC==1>
			;EXEC CONTROLS PROCESSING FOR EXEC OR MONITOR PROGRAM

	DEFINE	SWITCH	;MACRO TO READ IN CONSOLE SWITCHES
	<IFN EXEC,<CALLI 5,20>
	 IFE EXEC,<DATAI APR,5>>

	DEFINE LIGHT	;MACRO TO SET LIGHTS FOR GOOD.
			;FOR LOOKING AT OTHER LOCATIONS WHILE THIS
			;IS RUNNING, TURN OFF THE CP SWITCH MARKED
			;MI PROG DIS (IT'S INSIDE THE BLUE PANEL)
	<IFN EXEC,<CALLI -1>
	 IFE EXEC,<DATAO PI,>>

	IFE EXEC,<LOC 20
		RIM10B	;MAPE PTAPE WITH LOADER>

CONT1:	SETZB	6	;INITIALIZE DISPLAY AND PROG REGS
CONT:	SWITCH
	HRLI	5,0	;JUST RIGHT HALF
	CAILE	5,PRGNO ;PRGNO IS THE # OF ROUTINES-1
	MOVE	5,6	;IF OUT OF RANGE, USE OLD PROG
	MOVEM	5,6	;OF COURSE, IT'S NICE TO KNOW WHAT IT WAS!
	HLRZ	7,JVEC(6)	;LOAD SUBROUTINE WAIT TIME
	JRST	@JVEC(6)	;JUMP TO SUBROUTINE

JVEC:	XWD	10000,NULJBL	;JVEC IS TABLE CONTAINING THE WAIT TIME
	XWD	2000,ACR	;AND LOCATION OF THE VARIOUS SUBROUTINES
	XWD	6000,BOTH	;IT MUST BE CHANGED WHENEVER MORE ARE
	XWD	10000,BOTH	;ADDED
	XWD	30000,INCH
	XWD	200000,SPD
	XWD	10000,RND
	XWD	20000,PNGPNG
	XWD	STOP
	PRGNO==.-JVEC


WAIT:	0		;JSR HERE
	LIGHT
	SWITCH
	HLRZ	10,5	;JUST LEFT HAND SIDE
	TRZ	10,770000 ;DON'T MAKE IT TO BIG!
	CAIN	10,0	;IS IT 0?
	MOVEI	10,10	;YES, WE'D BETTER WAIT ANYWAY
	IMUL	10,7	;WE'D ALSO BETTER MAKE IT BIGGER
	SOJG	10,.	;WAIT HERE
	JRST	@WAIT	;RETURN

NULJBL: ROT	-1	;IT'S A STANFORD NULL JOB!
	TLNN	200000	;IF BIT 1 IS OFF,
	TLC	400000	;COMPLEMENT BIT 0
	JSR	WAIT	;WAIT
	JRST	CONT	;MAYBE THERE'S SOMETHING BETTER TO RUN


ACR:	MOVEI	0	;ZERO AC 0
	MOVEI	1,43	;TIMES IN OUTER LOOP=35
ACR1:	ADDI	1	;TACK ON A BIT
	MOVEI	2,45	;TIMES IN INNER LOOP=37
ACR2:	ROT	-1	;ROTATE
	JSR	WAIT	;WAIT
	SOJG	2,ACR2	;END OF INNER LOOP
	SOJG	1,ACR1	;END OF OUTER LOOP
	JRST	CONT	;RETURN


BOTH:	SETZB	1,2	;THESE REGISTERS ARE FOR EACH HALF OF TH PATTERN
	MOVE	3,JVEC+2 ;WE NEED A BIT SOMEWHERE
	TLC	3,40	;SO WE CAN CHANGE DIRECTION
	MOVEM	3,JVEC+2 ;AND THIS MIGHT AS WELL BE IT!
	MOVEI	3,1	;1&2 ARE OR'ED TO MAKE AC0, 3 TELLS WHETHER OR NOT TO ADD A BIT

BOTH1:	MOVEI	4,100	;64 TIMES THROUGH EACH PASS
BOTH2:	SOJG	3,BOTH3 ;DEC BIT COUNTER
	MOVEI	3,5	;ADD-A-BIT TME!
	TLO	1,400000
	TRO	2,1
BOTH3:	LSH	1,-1	;SHIFT THE RL REGISTERS
	LSH	2,1
	MOVE	1	;LOAD ONE OF THEM
	TRNE	6,1	;ARE WE THE ODD OR EVEN JOB?
	JRST	BOTH5	;WE'RE EVEN
	TRNE	7,40	;WHICH WAY ARE WE GOING?
	JRST	.+3
	HLL	2
	JRST	.+4	;THIS CODE DETERMINES WHICH WAY THE
	HRR	2	;BITS SHOULD GO (IN OR OUT)
	JRST	.+2	;SKIP OVER EVEN JOB
BOTH5:	IOR	0,2	;WHICH LIKES WHOLE WORDS
	JSR	WAIT	;WAIT
	SOJG	4,BOTH2 ;REPEAT LOOP
	CAIL	3,10	;WILL SKIP IF JUST FINISHED PASS 1
	JRST	CONT	;RETURN
	MOVEI	3,7777	;GUARANTEE THAT ON MORE BITS GET ADDED
	JRST	BOTH1	;XCT PASS 2

INCH:	MOVE	1,I2	;THE INCHWORM PROGRAM
	MOVE	3,I3	;OR IS IT THE MUSIC HALL KICK LINE?
	SETZB	2,4	;STARTING WITH NOTHING IS A GOOD WAY TO START
	MOVEI	11,^D80 ;80 TIMES THROUGH
I1:	MOVE	2	;AT REST
	LSHC	1,-1	;STEP
	JSR	WAIT	;HOLD
	LSH	7,-1	;SHORTEN WAIT FACTOR
	MOVE	4	;STRETCH (OR KICK)
	LSHC	3,-1	;STEP WHILE STANDING ON ONE FOOT
	JSR	WAIT
	LSH	7,1	;RESTORE WAIT
	SOJG	11,I1	;LOOP
	JRST	CONT	;OR END

I2:	314631463146
I3:	356735673567


SPD:	MOVE	SPD2	;SET PATTERN
SPD1:	JSR	WAIT	;WAIT A WHILE
	CAIG	7,1	;WAS IT WORTH IT?
	JRST	CONT	;NO-LET'S TRY SOMETHING ELSE
	IMULI	7,17	;MULT WAIT TIME BY 15/16
	LSH	7,-4
	SETCA	0	;COMPLEMENT THE PATTERN
	JRST	SPD1	;KEEP LOOPING

SPD2:	707070707070

RND:	IDIVI	2,14	;TAKE A RANDOM NUMBER,
	ADD	1,0	;AND ANOTHER,
	ADDB	1,2	;AND MAKE MORE RANDOM
	IMULI	3,3	;MAKE PART OF IT USEFUL
	MOVEI	0,7	;GET A 7
	ROT	0,(3)	;ROT IT THE # OF LOCS IN AC 3
	JSR	WAIT	;WAIT
	JRST	CONT	;AND RETURN

PNGPNG: MOVEI	400000	;THIS IS THE TABLE FOR RICH NEELY'S PING-PONG PROGRAM
	MOVEI	3,0		;SCORE
	MOVE	4,P5	;SET UP ROT INSTRUCTION
P1:	XCT	4	;BALL MOVER
	SWITCH
	TRNN	5,777700 ;IF ANY OF BITS 18-29 ARE ON, DISPLAY SCORE
	JRST	PWAIT	;WAIT
	MOVEM	5,P3	;SAVE SWITCH CONTENTS
	EXCH	0,3
	LIGHT	;MAKE SURE IT STAYS
	SWITCH
	TRNE	5,777700 ;CAN WE GO NOW?
	JRST	.-2	;NO..TRY AGAIN
	MOVE	5,P3	;YEP! RELOAD SWITCH REGISTER
	TRNN	5,7700	;CONTINUE WHERE WE LEFT OFF?
	JRST	CONT	;NO, LET'S RUN SOMETHING BETTER
	EXCH	0,3	;GET THE BALL BACK

PWAIT:	JSR	WAIT	;WAIT HERE
	CAIL	0,2	;AT END?
	JRST	P1	;NO.
	TRC	4,777776	;CHANGE DIRECTION
	JUMPL	LEFSID	;BALL IS ON THE LEFT SIDE
	TRNE	5,77	;WAS RIGHT SIDE EARLY?
	JRST	RMISS	;YES
	SWITCH
	TRNN	5,77	;OR WAS HE LATE?
	JRST	RMISS	;YES
MIDDLE: IMULI	7,3	;MULTIPLY WAIT TIME BY 3/4
	LSH	7,-2
	ROT	0,22	;CENTER BALL
	JRST	P1

LEFSID: TLNE	5,770000	;REPEAT FOR LEFT
	JRST	LMISS	;MISSED IT
	SWITCH
	TLNE	5,770000
	JRST	MIDDLE	;OR FALL INTO LMISS

LMISS:	AOBJP	3,.+1	;HOW TO ADD 1 TO THE LEFT SIDE OF AN AC
	SOJA	3,.+2	;AT LEAST IT WORKS
RMISS:	ADDI	3,1	;BUT IT'S EASIER TO ADD 1 T OHE RIGHT SIDE
	IMULI	7,5	;INCREASE WAIT TIME BY 5/4
	LSH	7,-2
	JRST	P1

P3:	0
P5:	ROT	1	;OUR ROTATE INST

STOP:	IFN EXEC<CALLI	1,12	;MONITOR MODE STOP
	JRST	CONT1		;IF CONT TYPED,>
	IFE EXEC<HALT	CONT1	;EXEC MODE STOP

ENDD:	JRST	CONT1>

	END	CONT1
